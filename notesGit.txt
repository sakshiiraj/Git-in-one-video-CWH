git diff          ----> compare working directory --> to --> staged directory.
git diff --staged ----> compare staged directory to last commit.

git checkout <fileName or multiple fileNames>    ----> get back to the last commit (if you make mistake unknowingly).
git checkout -f      				 ----> get back to the last commit for all files.
git commit -a -m  ----> skipped staging area and commit only from working directory.

git log -p -2    ----> to see last 2 logs
git status - s   ----> overview of logs in short (what's exactly happening in files.)

------------------------------------------------------------------------------------

git rm <fileName>                ----> remove files from working and staging area
git rm --cached <fileName>       ----> remove files from staging area only but still there in hard drive 
                                  (untracked files me wapis laane ke liye staging area se)

--------------------------------------------------------------

.gitignore
--> with /<directory OR folderName> we can ignore whole folder or directory
--> with (*.log) ignore all the files with extension .log
--> with (/mylogs.log or /<fileName>) ignore .log files from the root directory only (jha par .gitignore hai whi par bs ignore krna us file ko jo mention  hai using /fileName)

----------------------------------------------------------------
Branching

git checkout <branchName>   --> make a new branch
git checkout -b <branchName> --> make a new branch as well as switched to that branch

----- REMOTE REPOSITORY 

* Ek aisa URL jha hm apne repo ko host krenge
* Ek aisa repo jha hm apne local repo/folder ko push krte hai 


** Connect Remote and Local Repo :- git remote add origin url 
				    (url === https://github.com/sakshiiraj/Git-in-one-video-CWH.git)
=> Means ek ORIGIN naam ka remote add kr do URL ki jagah pe (to url ka short me name origin hoga)


-----------------------------------------
git remote    ----> gives origin as output i.e URL
git remote -v ----> gives URLs to fetch and push

------------------------------------------

git push       			----> sirf usi particular branch (ex. flaskIntegration me push krega)
git push origin master  	----> push kr do mere origin (i.e URL) pe master ko  / push kr do master ko origin pe  
git push -u origin master  	----> means whenever I type "git push" command after this command it always push to origin (i.e url), 
         			      or baar baar origin master type krne ki zrurt nhi hai

-------------------------------------- CLONING
git clone url <folderName where it cloned>
git clone url ----> clone with the same name